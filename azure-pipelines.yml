trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  Runtime: 'linux-musl-x64'
  ProjectVersion: '0.0'
  BuildNumber: '$(Build.BuildId)'
  VersionNumber: '$(projectVersion).$(buildNumber)'

steps:
  - task: UseDotNet@2
    inputs:
      version: '9.x'
  - task: DotNetCoreCLI@2
    name: Restore
    inputs:
      command: 'restore'
      projects: '**/*.fsproj'
      arguments: '-r $(Runtime)'
  - task: DotNetCoreCLI@2
    name: Build
    inputs:
      command: 'build'
      projects: '**/*.fsproj'
      arguments: '-r $(Runtime)'
      publishWebProjects: false
#  - task: DotNetCoreCLI@2
#    name: Test
#    inputs:
#      command: 'test'
#      projects: 'tests/**/*.fsproj'
#      arguments: '-r $(Runtime) --collect:"XPlat Code Coverage"'
  - task: PublishCodeCoverageResults@2
    displayName: 'Publish coverage'
    inputs:
      summaryFileLocation: '$(Agent.TempDirectory)/*/coverage.cobertura.xml'
  - task: DotNetCoreCLI@2
    name: Publish
    inputs:
      command: 'publish'
      projects: 'src/**/Worker.fsproj'
      arguments: '-r $(Runtime) --sc -p:PublishSingleFile=true -p:Version="$(VersionNumber)" -o $(Build.ArtifactStagingDirectory)'
      publishWebProjects: false
      zipAfterPublish: false
  - task: PublishBuildArtifacts@1
    name: Pack
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'